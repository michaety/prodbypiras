---
// Cart page for viewing cart items and checking out
import '@/styles/globals.css';
import { Music, ShoppingCart, Mail, Trash2, X } from 'lucide-react';

export const prerender = false;

const { DB, NAMESPACE } = Astro.locals.runtime.env;

// Fetch cart items from KV
const cartJson = await NAMESPACE.get("cart");
const cartIds = cartJson ? JSON.parse(cartJson) : [];

// Fetch listing details for cart items
let cartItems: any[] = [];
if (cartIds.length > 0) {
  const placeholders = cartIds.map(() => '?').join(',');
  const query = `SELECT * FROM shop_listings WHERE id IN (${placeholders})`;
  const { results } = await DB.prepare(query).bind(...cartIds).all();
  cartItems = results;
}

// Calculate total
const total = cartItems.reduce((sum, item) => sum + (Number(item.price) || 0), 0);
---

<script is:inline>
  // Theme setup - force dark mode
  document.documentElement.classList.add('dark');
</script>

<!doctype html>
<html lang="en" class="dark">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <meta name="description" content="Shopping cart" />
    <title>Cart - Producer Portfolio</title>
  </head>
  <body>
    <!-- Navigation -->
    <nav class="sticky top-0 z-50 backdrop-blur-lg bg-background/80 border-b border-border">
      <div class="container mx-auto px-6 py-4">
        <div class="flex items-center justify-between">
          <a href="/" class="text-2xl font-bold hover-accent">Producer</a>
          <div class="flex items-center gap-6">
            <a href="/shop" class="text-sm font-medium hover-accent">Shop</a>
            <a href="/cart" class="text-sm font-medium text-primary flex items-center gap-2">
              <ShoppingCart className="w-4 h-4" /> Cart
            </a>
            <a href="/contact" class="text-sm font-medium hover-accent flex items-center gap-2">
              <Mail className="w-4 h-4" /> Contact
            </a>
          </div>
        </div>
      </div>
    </nav>

    <!-- Cart Content -->
    <section class="container mx-auto px-6 py-12">
      <h1 class="text-4xl md:text-5xl font-bold mb-8">
        Shopping <span class="text-primary">Cart</span>
      </h1>

      {cartItems.length > 0 ? (
        <div class="grid grid-cols-1 lg:grid-cols-3 gap-8">
          <!-- Cart Items -->
          <div class="lg:col-span-2 space-y-4">
            {cartItems.map((item: any) => (
              <div class="bg-card rounded-lg border border-border p-4 flex gap-4">
                {/* Image */}
                <div class="flex-shrink-0">
                  {item.image_url ? (
                    <img 
                      src={item.image_url} 
                      alt={item.title}
                      class="w-24 h-24 object-cover rounded"
                    />
                  ) : (
                    <div class="w-24 h-24 bg-muted flex items-center justify-center rounded">
                      <Music className="w-8 h-8 text-muted-foreground" />
                    </div>
                  )}
                </div>

                {/* Details */}
                <div class="flex-1">
                  <h3 class="font-semibold text-lg">{item.title}</h3>
                  <div class="flex items-center gap-2 mt-1 text-sm text-muted-foreground">
                    <span class="px-2 py-1 bg-muted rounded">{item.type}</span>
                    {item.bpm && <span>{item.bpm} BPM</span>}
                    {item.key && <span>{item.key}</span>}
                  </div>
                  {item.description && (
                    <p class="text-sm text-muted-foreground mt-2 line-clamp-2">
                      {item.description}
                    </p>
                  )}
                </div>

                {/* Price and Remove */}
                <div class="flex flex-col items-end justify-between">
                  <button
                    onclick={`removeFromCart(${item.id})`}
                    class="p-2 text-muted-foreground hover:text-destructive transition-colors"
                    title="Remove from cart"
                  >
                    <X className="w-5 h-5" />
                  </button>
                  <span class="text-xl font-bold text-primary">
                    ${Number(item.price).toFixed(2)}
                  </span>
                </div>
              </div>
            ))}
          </div>

          <!-- Cart Summary -->
          <div class="lg:col-span-1">
            <div class="bg-card rounded-lg border border-border p-6 space-y-4 sticky top-24">
              <h2 class="text-2xl font-bold">Order Summary</h2>
              
              <div class="space-y-2 py-4 border-y border-border">
                <div class="flex justify-between text-muted-foreground">
                  <span>Items ({cartItems.length})</span>
                  <span>${total.toFixed(2)}</span>
                </div>
              </div>

              <div class="flex justify-between text-xl font-bold">
                <span>Total</span>
                <span class="text-primary">${total.toFixed(2)}</span>
              </div>

              <a
                href="/api/create-checkout-session?cart=true"
                class="block w-full px-6 py-3 bg-primary text-primary-foreground rounded-lg hover:bg-primary/90 transition-colors font-semibold text-center"
              >
                Proceed to Checkout
              </a>

              <button
                onclick="clearCart()"
                class="w-full px-6 py-3 bg-card border border-border text-muted-foreground rounded-lg hover:border-destructive hover:text-destructive transition-colors font-medium"
              >
                Clear Cart
              </button>
            </div>
          </div>
        </div>
      ) : (
        <div class="text-center py-20 bg-card rounded-lg border border-border">
          <ShoppingCart className="w-20 h-20 mx-auto mb-6 text-muted-foreground opacity-50" />
          <h2 class="text-2xl font-semibold mb-2">Your cart is empty</h2>
          <p class="text-muted-foreground mb-6">
            Add some beats, samples, or packs to get started
          </p>
          <a 
            href="/shop"
            class="inline-flex items-center gap-2 bg-primary text-primary-foreground px-6 py-3 rounded-lg font-semibold hover:bg-primary/90 transition-colors"
          >
            Browse Shop
          </a>
        </div>
      )}
    </section>

    <!-- Footer -->
    <footer class="border-t border-border mt-20">
      <div class="container mx-auto px-6 py-8">
        <p class="text-center text-muted-foreground text-sm">
          Â© {new Date().getFullYear()} Producer Portfolio. All rights reserved.
        </p>
      </div>
    </footer>

    <script>
      // Remove item from cart
      (window as any).removeFromCart = async function(id: number) {
        try {
          const response = await fetch('/api/cart', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ id, action: 'remove' }),
          });

          if (response.ok) {
            // Reload page to show updated cart
            window.location.reload();
          } else {
            alert('Failed to remove item. Please try again.');
          }
        } catch (error) {
          console.error('Error removing from cart:', error);
          alert('An error occurred. Please try again.');
        }
      };

      // Clear entire cart
      (window as any).clearCart = async function() {
        if (!confirm('Are you sure you want to clear your cart?')) {
          return;
        }

        try {
          const response = await fetch('/api/cart', {
            method: 'DELETE',
          });

          if (response.ok) {
            // Reload page to show empty cart
            window.location.reload();
          } else {
            alert('Failed to clear cart. Please try again.');
          }
        } catch (error) {
          console.error('Error clearing cart:', error);
          alert('An error occurred. Please try again.');
        }
      };
    </script>
  </body>
</html>
